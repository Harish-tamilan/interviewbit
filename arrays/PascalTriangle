public class Solution {

/*
This is the solution for the pascal's triangle problem in interviewbit.
Problem Link : https://www.interviewbit.com/problems/pascal-triangle/

Algorithm:

1. First fill the two rows with one
2. Each row should have i number of characters (i.e 4th row should have 4 characters, 3rd row should have 3 characters like that)
3. For filling nth row, sum adjacent values in n-1th row and fill. So we would end up by getting k-1 characters( i.e If 3rd row has 3 characters, like 1,2,1, we would sum 1+2
and 2+1, so it would be 3,3. but 4th row needs to have 4 characters. so we need to add 1 at beginning and end which would make 1 3 3 1).



    public ArrayList<ArrayList<Integer>> solve(int n) {
        
        ArrayList<ArrayList<Integer>> list = new ArrayList<>();
        
        if(n==0)
        {
            return list;
        }
        else if(n==1)
        {
            list.add(new ArrayList<>(Arrays.asList(1)));
            return list;
        }
        list.add(new ArrayList<>(Arrays.asList(1,1)));
        
        int i=3,j;
        
        for(i=3;i<=n;i++)
        {
            ArrayList<Integer> temp = new ArrayList<>();
            temp.add(1);
            for(j=0;j<list.get(i-2).size()-1;j++)
            {
                temp.add(list.get(i-2).get(j)+list.get(i-2).get(j+1));
            }
            temp.add(1);
            list.add(temp);
        }
        
        return list;
    }
}
