public class Solution {
   
    static class Pair
    {
        int min;
        int max;
    }
    
    public int maximumGap(final List<Integer> a) {
        
        List<Pair> list = new ArrayList<>();
        int min = Collections.min(a), max = Collections.max(a), n = a.size();
        int gap = (int)Math.ceil((max-min)/(double)(n-1));
        //System.out.println("Max is "+max+", min is "+min+", n is "+n);
        //double d = (max-min)/(double)(n-1);
        //System.out.println("Gap is "+ gap);
        int i,j;
        if(max==min)
            return 0;
        for(i=0;i<(int)Math.ceil(max/(double)gap);i++)
        {
            list.add(new Pair());
        }
         //System.out.println(list);
        for(i=0;i<n;i++)
        {
            //System.out.println(a.get(i));
            j = (int)Math.ceil(a.get(i)/(double)gap)-1;
            if(list.get(j).min==0 || list.get(j).max==0)
            {
                list.get(j).min = a.get(i);
                list.get(j).max = a.get(i);
            }
            else
            {
                list.get(j).min = Math.min(a.get(i),list.get(j).min);
                list.get(j).max = Math.max(a.get(i),list.get(j).max);
            }
        }
       
        int ans=0;
        int prev=list.get(0).max;
        for(i=1;i<list.size();i++)
        {
            if(list.get(i).min==0)
                continue;
                
            ans = Math.max(ans, list.get(i).min - prev);
            prev = list.get(i).max;
        }
        return 5;
    }
}
